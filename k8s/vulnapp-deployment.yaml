---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: permissive-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: permissive-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: my-service-account
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-flask-app
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: flask-app
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: flask-app
    spec:
      serviceAccountName: permissive-sa
      containers:
      - image: 844561221046.dkr.ecr.eu-central-1.amazonaws.com/flask-app:latest
        imagePullPolicy: Always
        name: flask-app
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: service-flask-app
spec:
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: flask-app
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-flask-app
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: service-flask-app
              port:
                number: 80